%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Non mathematical macros

% Notes

\RequirePackage{soul} %for highlighting, strinking out, etc
\RequirePackage{todonotes}
\RequirePackage[dvipsnames]{xcolor}

\DeclareRobustCommand{\hlcolor}[2]{{\sethlcolor{#2}\hl{#1}}}

\makeatletter
\if@todonotes@disabled
\newcommand{\todohl}[3]{#2}
\else
\newcommand{\todohl}[3]{\hlcolor{#1}{#2}\todo[color=#1,size=\footnotesize]{#3}}
\fi
\makeatother

\newcommand{\note}[4]{\todohl{#2}{#3}{\fbox{\bfseries#1} #3}}

\newcommand{\mlb}[2]{\note{MLB}{red!80!yellow}{#1}{#2}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% General maths

% Symbols

\RequirePackage{mathtools} % Subsumes the following
% \RequirePackage{amsmath}
% \RequirePackage{amssymb}
% \RequirePackage{amsfonts}
\RequirePackage{stmaryrd} % More symbols
\RequirePackage{dsfont} % More double-struck stuff

\renewcommand{\epsilon}{\varepsilon}
\renewcommand{\phi}{\varphi}

% Tikz and friends

\RequirePackage{tikz}
\usetikzlibrary{arrows}
\RequirePackage[Libertinus]{./styles/fontcd}
\usetikzlibrary[patterns]

% Colors in math mode, with correct spacing
% https://tex.stackexchange.com/questions/21598/how-to-color-math-symbols

\makeatletter

\def\mathcolor#1#{\@mathcolor{#1}}
\def\@mathcolor#1#2#3{%
	\protect\leavevmode
	\begingroup
    \color#1{#2}#3%
  \endgroup
}

\makeatother

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Linking

\newcommand{\coqPR}[1]{\href{https://github.com/coq/coq/pull/#1}{\##1}}
\newcommand{\coqIssue}[1]{\href{https://github.com/coq/coq/issues/#1}{\##1}}
\newcommand{\CEP}[1]{\href{https://github.com/coq/coq/issues/#1}{\##1}}

% First optional argument: subfolder
% Second optional argument: prefix (usually PCUIC)
% Mandatory argument: name of the file
\NewDocumentCommand{\pcuicfile}{o O{PCUIC} m}{%
  {\href{https://github.com/MetaCoq/metacoq/blob/coq-8.14/pcuic/theories/%
    \IfValueT{#1}{#1/}#2#3.v}{#2#3}}%
}

% First optional argument: subfolder
% Second optional argument: prefix (usually PCUIC)
% First mandatory argument: name of the file
% Second mandatory argument: name of the definition/lemma/whatever
% Third mandatory argument: line
\NewDocumentCommand{\pcuicline}{o O{PCUIC} m m m}{%
  {\href{https://github.com/MetaCoq/metacoq/blob/coq-8.14/pcuic/theories/%
    \IfValueT{#1}{#1/}#2#3.v\#L#5}{#4}}%
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Induction rules

\usepackage{mathpartir}
\renewcommand{\TirNameStyle}{\textsc} %style of the induction rule name for mathpartir

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Reference to inference rules, inspired by https://tex.stackexchange.com/questions/340788/cross-referencing-inference-rules

\makeatletter

\NewDocumentCommand \mpr@label { m }{%
	\def\@currentlabelname{#1}%
  \phantomsection % Creating an anchor to get a correct hyper reference link
}

\DeclareDocumentCommand \inferdef {m m m}{%
  \inferrule*[vcenter,right=#1]{#2}{#3}
  \mpr@label{\textsc{#1}}
}%

\DeclareDocumentCommand \redrule {o m m}{%
	\IfValueTF{#1}
	{\textsc{#1}: \; #2 \redCCIC #3 \mpr@label{\textsc{#1}}}
	{#2 \redCCIC #3}
}

\makeatother

\newcommand{\ruleref}[1]{Rule \nameref{#1}}

%mathpar hack, inspired by http://lists.seas.upenn.edu/pipermail/types-list/2019/002157.html

\newcommand{\maflushleft}{\strut \and \hfill}

\newcommand{\jform}[1]{\boxed{#1}\maflushleft\\}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Type theoretic stuff

% To allow like breaks at points, see https://tex.stackexchange.com/questions/19094/allowing-line-break-at-in-inline-math-mode-breaks-citations
\AtBeginDocument{%
  \mathchardef\mathpoint\mathcode`\.
  \mathcode`\.="8000 
}
{\catcode`.=\active
  \gdef.{\mathpoint\discretionary{}{}{}}
}

% For better spacing of :, see https://tex.stackexchange.com/questions/64423/exchange-meaning-of-and-colon

\AtBeginDocument{\DeclareMathSymbol{:}{\mathpunct}{operators}{"3A}}
\def\colon{\mathrel{:}}

% Typing

\DeclareMathOperator{\ty}{:}
\DeclareMathOperator{\cty}{\triangleleft}
\newcommand{\pity}[1]{\mathop{\triangleright_{#1}}}
\DeclareMathOperator{\ity}{\triangleright}

\newcommand{\inferty}[3]{#1 \vdash #2 \ity #3}
\newcommand{\pinferty}[4]{#2 \vdash #3 \pity{#1} #4}
\newcommand{\checkty}[3]{#1 \vdash #2 \cty #3}

%% Contexts
\newcommand{\emptycon}{\cdot}

\newcommand{\into}{\coloneqq}
\newcommand{\subs}[3]{#1[#2 \into #3]}
\newcommand{\multisubs}[2]{#1[#2]}

% Terms

%See https://tex.stackexchange.com/questions/477662/fontspec-breaks-capital-greek-letters-in-declaremathoperator?rq=1
\let\l\relax
\DeclareMathOperator{\l}{λ}

\let\P\relax
\DeclareMathOperator{\P}{Π}

\DeclareDocumentCommand\letin{m m m m}
  {\operatorname{let} #1 : #2 \coloneqq #3 \operatorname{in} #4}

%% Universes

\DeclareDocumentCommand\uni{o}{\square\IfValueT{#1}{_{#1}}}
\newcommand{\umaxsymb}{\max}
\newcommand{\unextsymb}{+1}
\DeclareDocumentCommand\unext{m}{#1+1}
\DeclareDocumentCommand\umax{m m}{\max(#1,#2)}

\newcommand{\ulev}[1]{^{@#1}}

\DeclareMathOperator{\Prop}{Prop}

%% Inductive Types

\DeclareMathOperator{\indop}{ind}
\DeclareDocumentCommand\ind{m m m m}
  % First the type, then the scrutinee, the predicate and finally the branches
{\indop_{#1}(#2 ; #3 ; #4)}

\DeclareDocumentCommand\match{m m m m m m}
  % First the type, then the scrutinee, the predicate and finally the branches
{\operatorname{match}_{#1;#2;#3}(#4 ; #5 ; #6)}

\DeclareMathOperator{\Empty}{\bot}

\DeclareMathOperator{\Bool}{\symbf{B}}
\DeclareMathOperator{\true}{tt}
\DeclareMathOperator{\false}{ff}

\DeclareMathOperator{\Nat}{\symbf{N}}
\newcommand{\z}{0}
\let\S\relax
\DeclareMathOperator{\Sop}{suc}
\DeclareDocumentCommand\S{m}{\Sop(#1)}

\DeclareMathOperator{\Sb}{Σ}
\NewDocumentCommand\pair{o o m m}{(#3,#4)\IfValueT{#1}{_{(#1,#2)}}}

\DeclareMathOperator{\List}{\symbf{Li}}
\NewDocumentCommand\lnil{o}{[]\IfValueT{#1}{_{#1}}}
\DeclareMathOperator{\lconsop}{:\hspace{-1.5pt}:}
\NewDocumentCommand\lcons{o m m}{#2 \lconsop\IfValueT{#1}{_{#1}} #3}

\DeclareMathOperator{\eqtyop}{=}
\NewDocumentCommand\eqty{o m m}{#2 =\IfValueT{#1}{_{#1}} #3}
\DeclareMathOperator{\reflop}{refl}
\NewDocumentCommand\refl{o o}{\reflop\IfValueT{#2}{_{\IfValueT{#1}{#1,}#2}}}

\DeclareMathOperator{\Vect}{Ve}
\NewDocumentCommand\vnil{o}{[]\IfValueT{#1}{_{#1}}}
\DeclareMathOperator{\vconsop}{:\hspace{-1.5pt}:}
\NewDocumentCommand\vcons{o o m m}{#3 \lconsop\IfValueT{#1}{_{#1,#2}} #4}

% Conversion
\newcommand{\alpheq}{=_{\alpha}}
\newcommand{\alphleq}{\leq_{\alpha}}
\newcommand{\conv}{\cong}
\newcommand{\udconv}{\conv} % Untyped declarative conversion
\newcommand{\uaconv}{\conv} % Untyped algorithmic conversion
\newcommand{\tdconv}{\conv} % Typed declarative conversion
\newcommand{\taconv}{\conv} % Typed algorithmic conversion
\newcommand{\cum}{\preceq} % Cumulativity

% Reduction
\newcommand{\basered}{\rightarrow}
\newcommand{\ored}{\basered^1} % One-step full reduction (closed by all contexts)
\newcommand{\fred}{\basered^{\star}} % Multi-step full reduction (closed by all contexts)
\newcommand{\tred}{\rightharpoonup} % Top reduction (closed by no context, one step)
\newcommand{\hored}{\ored_{h}} % One-step weak-head reduction (closed by head contexts)
\newcommand{\hred}{\red_{h}} % One-step weak-head reduction (closed by head contexts)
\newcommand{\red}{\fred} % Reduction

\newcommand{\ocored}{\reflectbox{$\basered^{\reflectbox{$1$}}$}}

% Neutral/normal forms

\AtBeginDocument{
  \NewCommandCopy{\numero}{\no}
  \renewcommand{\no}{\mathrel{\mathrm{no}}}

  \NewCommandCopy{\noteq}{\ne}
  \renewcommand{\ne}{\mathrel{\mathrm{ne}}}
}

% Gradual stuff

\DeclareDocumentCommand{\?}{o}{\symbf{?}\IfValueT{#1}{_{#1}}}
\DeclareDocumentCommand{\err}{o}{\operatorname{err}\IfValueT{#1}{_{#1}}}

\DeclareMathOperator{\ascop}{:\hspace{-1.5pt}:}
\DeclareDocumentCommand{\asc}{m m}{#1 \ascop #2}

\newcommand{\cons}{\sim}
\newcommand{\pre}{\sqsubseteq}
\newcommand{\equiprecise}{\sqsupseteq\sqsubseteq}
\newcommand{\obsApprox}{\preccurlyeq^{o}}
\newcommand{\obsEquiv}{\approx^{o}}
\newcommand{\obsRef}{\sqsubseteq^{o}}

% Bad Approaches

\DeclareMathOperator{\axiom}{ax}
\DeclareDocumentCommand{\rai}{o}{\operatorname{raise}\IfValueT{#1}{_{#1}}}